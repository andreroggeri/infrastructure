# route_home_network_through_vpn is used to determine if the home network should be routed through the VPN. (Eg: If 192.168.15.0/24 should be routed through the VPN)
vpn_clients_static:
  hosts:
    nas:
      ansible_host: 192.168.15.4
      wg_private_ip: 10.8.0.2
      wg_public_key: "{{ wg_nas_public_key }}"
      wg_private_key: "{{ wg_nas_private_key }}"
      route_home_network_through_vpn: false
    office-pi:
      ansible_host: 192.168.15.137
      wg_private_ip: 10.8.0.7
      wg_public_key: "{{ wg_raspberry_pi_office_public_key }}"
      wg_private_key: "{{ wg_raspberry_pi_office_private_key }}"
      route_home_network_through_vpn: true
    opi-1:
      ansible_host: 192.168.15.12
      wg_private_ip: 10.8.0.8
      wg_public_key: "{{ wg_opi_1_public_key }}"
      wg_private_key: "{{ wg_opi_1_private_key }}"
      route_home_network_through_vpn: false

# TODO: Read from terraform
vpn_clients_dynamic:
  hosts:
    k3s-node-01:
      ansible_host: 193.123.106.26
      wg_private_ip: 10.8.0.13
      route_home_network_through_vpn: true
    agendaodonto:
      ansible_host: 204.216.135.129
      wg_private_ip: 10.8.0.10
      route_home_network_through_vpn: true
    gateway:
      ansible_host: 204.216.132.96
      wg_private_ip: 10.8.0.11
      route_home_network_through_vpn: true

vpn_server:
  hosts:
    vpn-server:
      ansible_host: 204.216.165.63

k3s_cluster:
  children:
    server:
      hosts:
        10.8.0.2:
        10.8.0.13:
        10.8.0.8:
    agents:
      hosts:
        # TODO: Add agents
        #
  vars:
    k3s_version: "v1.32.3+k3s1"
    ansible_user: "{{ maintenance_user }}"
    token: "{{ k3s_token }}"
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"
    extra_server_args: "--tls-san 10.8.0.2,10.8.0.13,10.8.0.8 --flannel-iface=wg0 --node-ip={{ ansible_host }} --flannel-backend=wireguard-native --advertise-address={{ ansible_host }}"
